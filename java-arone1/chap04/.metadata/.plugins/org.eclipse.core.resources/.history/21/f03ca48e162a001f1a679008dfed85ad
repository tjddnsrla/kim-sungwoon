package com.student1;

import java.sql.*;
import java.util.*;

import com.student1.utils.DBManager;
 
public class Board1Service {
    Scanner scanner = new Scanner(System.in); // 키보드입력 받는 객체

    /**
	 * 설명: 게시글 작성
	 */
	public void insertBoard() {
		// 1. 게시글 제목 받기
		Scanner scanner = new Scanner(System.in); // 키보드입력 받는 객체
		/**
		 * 설명: 게시글 작성
		 */
		public int insertBoard() {
			// 1. 게시글 제목 받기
			System.out.print("글제목(취소: quit): ");
			String title = scanner.nextLine();	// 키보드로 '글제목'받기
			if (title.equals("quit")) {
				System.out.println("작성이 취소되었습니다.");
				return -1;
			}
			
			// 2. 게시글 내용 받기
			System.out.print("글내용(취소: quit): ");
			String content = scanner.nextLine();// 키보드로 '글내용'받기
			if (content.equals("quit")) {
				System.out.println("작성이 취소되었습니다.");
				return -1;
			}
			
			// 3. 위의 입력된 게시글의 제목과 내용을 받아서 Oracle DB에 저장할 수 있도록 DB접속준비
			Connection conn = DBManager.getDBConnection();
			
			// 4. Oracle DB에 데이터를 삽입하기 위해 insert sql문을 작성
			String insertSql = """
					INSERT INTO board(seq, title, content, read_count) 
					VALUES(seq_board_no.NEXTVAL, ?, ?, 0);
			""";
			
			int resultRows = 0;		// insert문을 실행한 뒤에 테이블 영향을 받은 행 개수
			PreparedStatement pstmt = null;     
			
			try {
				// 5. Oracle DB에 데이터를 삽입 코드를 실행할 준비
				pstmt = conn.prepareStatement(insertSql); 
				pstmt.setString(1, title);	 // 위 insertSql에 첫번째?에 키보드로 입력받은 제목을 세팅 
				pstmt.setString(2, content); // 위 insertSql에 두번째?에 키보드로 입력받은 내용을 세팅
				
				
				// 6. 실제로 sql코드를 실행
				resultRows = pstmt.executeUpdate();	// executeUpdate로 insert, update, delete sql코드를 실행
				
				System.out.println("글 성공적으로 등록됨~");
			} catch(SQLException se) {
				System.out.println("게시글 삽입하는 도중 에러가 발생 -> " + se.getMessage());
			} finally {
				// 7. Oracle DB 접속 관련 객체들 정리	
				DBManager.dbClose(conn, pstmt, null);
			}
			
			
			return resultRows; 
		}
		
		/**
		 * 설명: 게시글 수정
		 */
		public void updateBoard() {
			
		}		
	}
